{'TMP': 'C:\\Users\\raf\\AppData\\Local\\Temp', 'COMPUTERNAME': 'RAF', 'VS110COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\', 'USERDOMAIN': 'RAF', 'PSMODULEPATH': 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'JUNIT_HOME': 'D:\\lib', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 23 Stepping 10, GenuineIntel', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'PROGRAMFILES': 'C:\\Program Files (x86)', 'PROCESSOR_REVISION': '170a', 'SYSTEMROOT': 'C:\\WINDOWS', 'PATH': 'C:\\Program Files (x86)\\NVIDIA Corporation\\PhysX\\Common;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Kits\\8.1\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Microsoft SDKs\\TypeScript\\1.0\\;C:\\Users\\raf\\Documents\\apache-ant-1.9.6-bin\\apache-ant-1.9.6\\bin;C:\\Program Files\\Java\\jdk1.8.0_65\\bin;D:\\lib;C:\\Program Files\\MATLAB\\R2013a\\runtime\\win64;C:\\Program Files\\MATLAB\\R2013a\\bin;C:\\Python27\\Scripts;C:\\Users\\raf\\AppData\\Local\\Microsoft\\WindowsApps;', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'TEMP': 'C:\\Users\\raf\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'x86', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\raf\\AppData\\Local', 'HOMEPATH': '\\Users\\raf', 'USERDOMAIN_ROAMINGPROFILE': 'RAF', 'VS120COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\', 'JAVA_HOME': 'C:\\Program Files\\Java\\jdk1.8.0_65', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'raf', 'LOGONSERVER': '\\\\RAF', 'PROMPT': '$P$G', 'SESSIONNAME': 'Console', 'PROGRAMDATA': 'C:\\ProgramData', 'COMMONPROGRAMFILES': 'C:\\Program Files (x86)\\Common Files', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'FP_NO_HOST_CHECK': 'NO', 'WINDIR': 'C:\\WINDOWS', 'APPDATA': 'C:\\Users\\raf\\AppData\\Roaming', 'HOMEDRIVE': 'C:', 'ANT_HOME': 'C:\\Users\\raf\\Documents\\apache-ant-1.9.6-bin\\apache-ant-1.9.6', 'SYSTEMDRIVE': 'C:', 'NUMBER_OF_PROCESSORS': '2', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_ARCHITEW6432': 'AMD64', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\raf'}